services:
  jenkins:
    build:
      context: .
      dockerfile: jenkins/jenkins.Dockerfile
    env_file:
      - /opt/env/.env
    # Replace with this if running locally
    # environment:
    #   GH_REPO_URL: ${GH_REPO_URL}
    #   GH_DEPLOY_KEY: ${GH_DEPLOY_KEY}
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
      - "8081:8081" # Spring Boot app
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./jenkins/init.groovy.d:/var/jenkins_home/init.groovy.d
      - ./jenkins/workflows:/var/jenkins_home/workflows
      # Allow Jenkins to talk to host Docker daemon to run docker exec
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitoring-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring-network
    depends_on:
      - jenkins

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USERNAME:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false

  zap:
    image: zaproxy/zap-stable
    container_name: zap
    command: zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
    ports:
      - "8090:8090"
    volumes:
      - zap_data:/zap/wrk
    networks:
      - monitoring-network

networks:
  monitoring-network:
    driver: bridge

volumes:
  jenkins_home:
  grafana_data:
  zap_data:
